trigger:
- main

variables:
  CONFIG: release
  QMAKE_EXTRA: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache"
  EXECUTOR: "time docker exec -i builder env BASH_ENV=/etc/profile"
  PROJECT: studio
  TESTS: true
  ALL_TESTS: "./run-simulator-tests.sh"
  CCACHE_CONFIGPATH: "$(Pipeline.Workspace)/ccache.conf"

stages:
- stage: Lint
  jobs:
  - job: Lint
    pool:
      vmImage: ubuntu-latest

    steps:
    - script: |
        git submodule update --init --recursive --jobs 4 --depth 1 --single-branch
        buildScripts/azure/install_linux.sh
      displayName: 'Docker + git submodule update'

    - script: $EXECUTOR buildScripts/azure/vera_translation.sh
      displayName: 'vera_translation.sh'

- stage: Build
  dependsOn: Lint
  condition: succeeded()
  jobs:
  - job: Build
    strategy:
      matrix:
        linux-release:
            displayName: Linux release + tests
            imageName: 'ubuntu-latest'
            QMAKE_EXTRA: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache CONFIG+=no-sanitizers CONFIG+=silent CONFIG+=warn_off"
        linux-debug:
            displayName: Linux debug + tests
            imageName: 'ubuntu-latest'
            QMAKE_EXTRA: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache CONFIG+=silent CONFIG+=small_debug_info CONFIG+=sanitizer CONFIG+=sanitize_undefined CONFIG+=sanitize_address"
            CONFIG: debug
            TESTS: $ALL_TESTS

    pool:
      vmImage: $(imageName)
    variables:
      CCACHE_DIR: "$(Pipeline.Workspace)/.ccache/$(Agent.OS)-$(CONFIG)"

    steps:
    - bash: |
        sudo apt-get install ccache -y
        echo "##vso[task.prependpath]/usr/lib/ccache"
        git submodule update --init --recursive --jobs 4 --depth 1 --single-branch
        buildScripts/azure/install_linux.sh
      displayName: Set up the environment
    - task: Cache@2
      inputs:
        key: '"ccache-$(Agent.OS)-$(CONFIG)" | "$(Agent.OS)-$(CONFIG)"'
        path: $(CCACHE_DIR)
        restoreKeys: "ccache-$(Agent.OS)-$(CONFIG)"
      displayName: Cache azure task

    - script: buildScripts/azure/script.sh
      displayName: 'Build with script.sh'

- stage: Installer
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: installer
    displayName: Installer + deployment
    variables:
      QMAKE_EXTRA: "CONFIG+=tests CONFIG+=noPch CONFIG+=ccache CONFIG+=no-sanitizers CONFIG+=silent CONFIG+=warn_off"
    pool:
      vmImage: $(imageName)

    steps:
    - bash: |
        sudo apt-get install ccache -y
        echo "##vso[task.prependpath]/usr/lib/ccache"
        git submodule update --init --recursive --jobs 4 --depth 1 --single-branch
        buildScripts/azure/install_linux.sh
      displayName: Set up the environment

    - task: Cache@2
      inputs:
        key: '"ccache-$(Agent.OS)-$(CONFIG)" | "$(Agent.OS)-$(CONFIG)"'
        path: $(CCACHE_DIR)
        restoreKeys: "ccache-$(Agent.OS)-$(CONFIG)"
      displayName: Cache azure task

    - script: buildScripts/azure/script.sh
      displayName: 'Build with script.sh'

    - script: |
        $EXECUTOR ./buildScripts/azure/test.sh
        buildScripts/azure/build_installer.sh
      displayName: 'Installer and deploy'
